setwd("C:\\Users\\kimeu\\Desktop\\수업\\4학년 1학기\\비정형데이터분석\\자료\\A_DeviceMotion_data")

library(stringr)
library(dplyr)
library(ggplot2)
library(tidyverse)
#Sys.setenv(JAVA_HOME="D:/java") RWeka를 쓰려면 이걸 계속 해줘야함 -> 해결함, 근데 혹시 안되면 이걸 다시 하기
library(RWeka)
library(seewave)
library(signal)
library(pracma)
library(fBasics)
library(e1071)
library(changepoint)
library(DT)

d <- getwd()
fls <- dir(d,recursive = TRUE)



for (f in fls){
  a <- file.path(str_c(d,"/",f))
  temp <- read.csv(a)
  assign(f,temp)
}



# 매개변수 column이름의 열에 앞에 mag를 붙여서 mag column이름으로 만들고 그 이름에 대한 x,y,z를 합해줌
mag <- function(df,column){
  df[,str_c("mag",column)] <-
    with(df,sqrt(get(str_c(column,'.x'))^2 + get(str_c(column,".y"))^2+get(str_c(column,".z"))^2))
  return(df)
}

HAR_total <- data.frame()

for(f in fls) {
  temp <- get(f)
  HAR_total <- rbind(HAR_total, temp %>% mutate(exp_no = unlist(regmatches(f,gregexpr("[[:digit:]]+",f)[1]))[1],
                                                id = unlist(regmatches(f,gregexpr("[[:digit:]]+",f)[1]))[2],
                                                activity = unlist(str_split(f, "\\_"))[1]))
}


rss <- function(x){
  rms(x) * (length(x))^0.5
}


HAR_total <- mag(HAR_total, "userAcceleration")
HAR_total <- mag(HAR_total, "rotationRate")

HAR_summary <- HAR_total %>% group_by(id, exp_no, activity) %>% summarize_at(.vars = c("maguserAcceleration",
                                                                                              "magrotationRate"),.funs = c(mean, min, max, sd, skewness, rms, rss, IQR, e1071::kurtosis))
HAR_summary$activity <- as.factor(HAR_summary$activity)
HAR_summary <- HAR_summary %>% ungroup() %>% select(-c("id","exp_no"))

HAR_summary.pca <- prcomp(HAR_summary %>% ungroup() %>% select(-activity),center = TRUE,scale. = TRUE)

plot(HAR_summary.pca$sdev,type = 'o',main = 'ScreePlot')

# 피크 및 변화분석할때 사용할 예정
for(d in fls){
  f <- get(d)
  f <- mag(f, 'rotationRate')
  f <- mag(f, 'userAcceleration')
  assign(d,f) # f의 내용을 d에 덮어쓰라는 함수 assign
}

id_f <- function(x){
  exp_no = unlist(regmatches(x,gregexpr("[[:digit:]]+",x)[1]))[1]
  id = unlist(regmatches(x,gregexpr("[[:digit:]]+",x)[1]))[2]
  activity = unlist(str_split(x,"\\_"))[1]
  return(cbind(exp_no,id,activity))
}

make_peak <- function(x){
  Peak_rslt <- data.frame()
  for(d in fls){
    f <- get(d)
    p <- findpeaks(f$magrotationRate, threshold = x)# findpeaks는 벡터 값을 입력을 받음
    Peak_rslt <- rbind(Peak_rslt, data.frame(d,
                                             f_n = ifelse(!is.null(p),dim(p)[1],0), # 피크의 개수를 카운트, dim함수는 행과 열을 반환해줌 -> 1이 행
                                             p_interval = ifelse(!is.null(p),ifelse(dim(p)[1]> 1, mean(diff(sort(p[,2]))),0),0),
                                             p_interval_std = ifelse(!is.null(p),ifelse(dim(p)[1]> 2,std(diff(sort(p[,2]))),0),0),
                                             p_mean = ifelse(!is.null(p),mean(p[,1]),0),
                                             p_max = ifelse(!is.null(p),max(p[,1]),0),
                                             p_min = ifelse(!is.null(p),min(p[,1]),0),
                                             p_std = ifelse(!is.null(p),ifelse(dim(p)[1] >= 2,std(p[,1]),0),0)))
  }
  
  
  
  return(Peak_rslt)
}



RF <- make_Weka_classifier("weka/classifiers/trees/RandomForest")


# 저장은 다른 경로에 하기
save.image(file = "C:\\Users\\kimeu\\Desktop\\수업\\4학년 1학기\\비정형데이터분석\\자료\\R파일\\shiny_data.RData")
